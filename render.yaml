services:
  - type: web
    name: jaari-rag-api
    env: python3
    repo: https://github.com/abdoulahadi/jaari-rag-api.git
    region: oregon
    plan: starter
    
    # Configuration des variables d'environnement
    envVars:
      - key: ENVIRONMENT
        value: production
        
      - key: DEBUG
        value: false
        
      - key: HOST
        value: 0.0.0.0
        
      - key: PORT
        value: 10000
        
      - key: LOG_LEVEL
        value: INFO
        
      - key: LOG_FORMAT
        value: json
        
      # Base de données (tu devras configurer une base PostgreSQL sur Render)
      - key: DATABASE_URL
        fromDatabase:
          name: jaari-postgres
          property: connectionString
      
      # Redis (optionnel, tu peux utiliser Redis de Render)
      - key: REDIS_URL
        fromService:
          name: jaari-redis
          type: redis
          property: connectionString
      
      # Variables à configurer dans le dashboard Render
      - key: GROQ_API_KEY
        sync: false  # À configurer manuellement dans le dashboard
        
      - key: SECRET_KEY
        generateValue: true  # Render génère automatiquement
        
      - key: DEFAULT_ADMIN_EMAIL
        value: admin@jaari.com
        
      - key: DEFAULT_ADMIN_USERNAME
        value: admin
        
      - key: DEFAULT_ADMIN_PASSWORD
        generateValue: true  # Render génère automatiquement
        
      - key: DEFAULT_ADMIN_FULL_NAME
        value: "Jaari Administrator"
    
    # Configuration du build
    buildCommand: pip install -r requirements.txt
    startCommand: python -m uvicorn app.main:app --host 0.0.0.0 --port $PORT
    
    # Health check
    healthCheckPath: /health
    
    # Auto-deploy depuis la branche main
    autoDeploy: true
    branch: main

# Base de données PostgreSQL
databases:
  - name: jaari-postgres
    databaseName: jaari_db
    user: jaari_user
    region: oregon
    plan: starter

# Redis (optionnel)
services:
  - type: redis
    name: jaari-redis
    region: oregon
    plan: starter
    maxmemoryPolicy: allkeys-lru
